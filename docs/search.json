[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "TAPIR: Transcript analysis pipelines in R",
    "section": "",
    "text": "Book contents\nThis is where the good stuff goes.\nMaybe a description of the major sections…"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "2  Exploratory data analysis",
    "section": "",
    "text": "How can we explore transcript expression from long read data…\nLet’s load some data…\n\nlibrary(here)\n\nhere() starts at /Users/milove/bioc/tapir\n\nurl &lt;- \"https://github.com/gandallab/Dev_Brain_IsoSeq/raw/main/data/cp_vz_0.75_min_7_recovery_talon_abundance_filtered.tsv.gz\"\nfilename &lt;- basename(url)\npath &lt;- here(\"data\",filename)\nif (!file.exists(path)) {\n  download.file(url, path)\n}\n\n\nlibrary(readr)\n\n\nAttaching package: 'readr'\n\n\nThe following objects are masked from 'package:testthat':\n\n    edition_get, local_edition\n\nraw_abundance_table &lt;- read.delim(path)\ndim(raw_abundance_table)\n\n[1] 214516     35\n\ncolnames(raw_abundance_table)\n\n [1] \"gene_ID\"               \"transcript_ID\"         \"annot_gene_id\"         \"annot_transcript_id\"  \n [5] \"annot_gene_name\"       \"annot_transcript_name\" \"n_exons\"               \"length\"               \n [9] \"gene_novelty\"          \"transcript_novelty\"    \"ISM_subtype\"           \"X209_1_VZ\"            \n[13] \"X209_2_VZ\"             \"X209_3_VZ\"             \"X209_4_VZ\"             \"X334_1_VZ\"            \n[17] \"X334_2_VZ\"             \"X334_3_VZ\"             \"X334_4_VZ\"             \"X336_1_VZ\"            \n[21] \"X336_2_VZ\"             \"X336_3_VZ\"             \"X336_4_VZ\"             \"X334_1_CP\"            \n[25] \"X334_2_CP\"             \"X334_3_CP\"             \"X334_4_CP\"             \"X209_1_CP\"            \n[29] \"X209_2_CP\"             \"X209_3_CP\"             \"X209_4_CP\"             \"X336_1_CP\"            \n[33] \"X336_2_CP\"             \"X336_3_CP\"             \"X336_4_CP\"            \n\nraw_abundance_table[1:5,1:15]\n\n  gene_ID transcript_ID       annot_gene_id annot_transcript_id annot_gene_name\n1      12            21 ENSG00000268903.1_5 ENST00000494149.2_2      AL627309.6\n2      18            34   ENSG00000228463.4   ENST00000424587.2      AP006222.2\n3      22            39   ENSG00000224813.2   ENST00000445840.1    RP4-669L17.4\n4      32            65 ENSG00000225630.1_4 ENST00000457540.1_1        MTND2P28\n5      33            66 ENSG00000237973.1_4 ENST00000414273.1_1        MTCO1P12\n  annot_transcript_name n_exons length gene_novelty transcript_novelty ISM_subtype X209_1_VZ\n1        AL627309.6-201       1    755        Known              Known        None         0\n2        AP006222.2-001       4   2257        Known              Known        None         0\n3      RP4-669L17.4-001       1    180        Known              Known        None         0\n4          MTND2P28-201       1   1044        Known              Known        None         0\n5          MTCO1P12-201       1   1543        Known              Known        None         0\n  X209_2_VZ X209_3_VZ X209_4_VZ\n1         0         0         0\n2         0         0         0\n3         1         0         0\n4         0         0         0\n5         0         0         0\n\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following object is masked from 'package:testthat':\n\n    matches\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\n\n\nAttaching package: 'tidyr'\n\n\nThe following object is masked from 'package:testthat':\n\n    matches\n\nraw_abundance_table |&gt;\n  select(starts_with(\"X\")) |&gt;\n  summarize(across(everything(), sum))\n\n  X209_1_VZ X209_2_VZ X209_3_VZ X209_4_VZ X334_1_VZ X334_2_VZ X334_3_VZ X334_4_VZ X336_1_VZ\n1    623608    542318    501999    529527   1273843   1594927   1160553   1546123   1328077\n  X336_2_VZ X336_3_VZ X336_4_VZ X334_1_CP X334_2_CP X334_3_CP X334_4_CP X209_1_CP X209_2_CP\n1    839389    924697   1323952   1164272   1432399   1048315   1426825   1315540   1198841\n  X209_3_CP X209_4_CP X336_1_CP X336_2_CP X336_3_CP X336_4_CP\n1   1107317   1144579   1328355    840493    927913   1328862\n\n\nWhich transcripts belong to which genes…\nFiltering…\nVisualize expression patterns for a particular gene\nHow to look across many genes?"
  }
]