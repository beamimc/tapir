[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "TAPIR: Transcript analysis pipelines in R",
    "section": "",
    "text": "Book contents\nThis is where the good stuff goes.\nMaybe a description of the major sections…"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "2  Exploratory data analysis",
    "section": "",
    "text": "How can we explore transcript expression from long read data…\nLet’s load some data…\n\nlibrary(here)\n\nhere() starts at /Users/milove/bioc/tapir\n\nurl &lt;- \"https://github.com/gandallab/Dev_Brain_IsoSeq/raw/main/data/cp_vz_0.75_min_7_recovery_talon_abundance_filtered.tsv.gz\"\nfilename &lt;- basename(url)\npath &lt;- here(\"data\",filename)\nif (!file.exists(path)) {\n  download.file(url, path)\n}\n\n\nlibrary(readr)\n\n\nAttaching package: 'readr'\n\n\nThe following objects are masked from 'package:testthat':\n\n    edition_get, local_edition\n\nraw_abundance_table &lt;- read_delim(path)\n\nRows: 214516 Columns: 35\n\n\n── Column specification ────────────────────────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (7): annot_gene_id, annot_transcript_id, annot_gene_name, annot_transcript_name, gene_novel...\ndbl (28): gene_ID, transcript_ID, n_exons, length, 209_1_VZ, 209_2_VZ, 209_3_VZ, 209_4_VZ, 334_1...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndim(raw_abundance_table)\n\n[1] 214516     35\n\ncolnames(raw_abundance_table)\n\n [1] \"gene_ID\"               \"transcript_ID\"         \"annot_gene_id\"         \"annot_transcript_id\"  \n [5] \"annot_gene_name\"       \"annot_transcript_name\" \"n_exons\"               \"length\"               \n [9] \"gene_novelty\"          \"transcript_novelty\"    \"ISM_subtype\"           \"209_1_VZ\"             \n[13] \"209_2_VZ\"              \"209_3_VZ\"              \"209_4_VZ\"              \"334_1_VZ\"             \n[17] \"334_2_VZ\"              \"334_3_VZ\"              \"334_4_VZ\"              \"336_1_VZ\"             \n[21] \"336_2_VZ\"              \"336_3_VZ\"              \"336_4_VZ\"              \"334_1_CP\"             \n[25] \"334_2_CP\"              \"334_3_CP\"              \"334_4_CP\"              \"209_1_CP\"             \n[29] \"209_2_CP\"              \"209_3_CP\"              \"209_4_CP\"              \"336_1_CP\"             \n[33] \"336_2_CP\"              \"336_3_CP\"              \"336_4_CP\"             \n\nraw_abundance_table[1:5,1:15]\n\n# A tibble: 5 × 15\n  gene_ID transcript_ID annot_gene_id      annot_transcript_id annot_gene_name annot_transcript_name\n    &lt;dbl&gt;         &lt;dbl&gt; &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;           &lt;chr&gt;                \n1      12            21 ENSG00000268903.1… ENST00000494149.2_2 AL627309.6      AL627309.6-201       \n2      18            34 ENSG00000228463.4  ENST00000424587.2   AP006222.2      AP006222.2-001       \n3      22            39 ENSG00000224813.2  ENST00000445840.1   RP4-669L17.4    RP4-669L17.4-001     \n4      32            65 ENSG00000225630.1… ENST00000457540.1_1 MTND2P28        MTND2P28-201         \n5      33            66 ENSG00000237973.1… ENST00000414273.1_1 MTCO1P12        MTCO1P12-201         \n# ℹ 9 more variables: n_exons &lt;dbl&gt;, length &lt;dbl&gt;, gene_novelty &lt;chr&gt;, transcript_novelty &lt;chr&gt;,\n#   ISM_subtype &lt;chr&gt;, `209_1_VZ` &lt;dbl&gt;, `209_2_VZ` &lt;dbl&gt;, `209_3_VZ` &lt;dbl&gt;, `209_4_VZ` &lt;dbl&gt;\n\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following object is masked from 'package:testthat':\n\n    matches\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\n\n\nAttaching package: 'tidyr'\n\n\nThe following object is masked from 'package:testthat':\n\n    matches\n\nraw_abundance_table |&gt;\n  select(contains(c(\"VZ\",\"CP\"))) |&gt;\n  summarize(across(everything(), sum))\n\n# A tibble: 1 × 24\n  `209_1_VZ` `209_2_VZ` `209_3_VZ` `209_4_VZ` `334_1_VZ` `334_2_VZ` `334_3_VZ` `334_4_VZ` `336_1_VZ`\n       &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n1     623608     542318     501999     529527    1273843    1594927    1160553    1546123    1328077\n# ℹ 15 more variables: `336_2_VZ` &lt;dbl&gt;, `336_3_VZ` &lt;dbl&gt;, `336_4_VZ` &lt;dbl&gt;, `334_1_CP` &lt;dbl&gt;,\n#   `334_2_CP` &lt;dbl&gt;, `334_3_CP` &lt;dbl&gt;, `334_4_CP` &lt;dbl&gt;, `209_1_CP` &lt;dbl&gt;, `209_2_CP` &lt;dbl&gt;,\n#   `209_3_CP` &lt;dbl&gt;, `209_4_CP` &lt;dbl&gt;, `336_1_CP` &lt;dbl&gt;, `336_2_CP` &lt;dbl&gt;, `336_3_CP` &lt;dbl&gt;,\n#   `336_4_CP` &lt;dbl&gt;\n\n\n\nlibrary(here)\nfilename &lt;- \"cp_vz_0.75_min_7_recovery_talon_abundance_filtered.tsv.gz\"\npath &lt;- here(\"data\",filename)\nlibrary(readr)\nraw_abundance_table &lt;- read_delim(path)\n\nRows: 214516 Columns: 35\n── Column specification ────────────────────────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (7): annot_gene_id, annot_transcript_id, annot_gene_name, annot_transcript_name, gene_novel...\ndbl (28): gene_ID, transcript_ID, n_exons, length, 209_1_VZ, 209_2_VZ, 209_3_VZ, 209_4_VZ, 334_1...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndim(raw_abundance_table)\n\n[1] 214516     35\n\ncolnames(raw_abundance_table)\n\n [1] \"gene_ID\"               \"transcript_ID\"         \"annot_gene_id\"         \"annot_transcript_id\"  \n [5] \"annot_gene_name\"       \"annot_transcript_name\" \"n_exons\"               \"length\"               \n [9] \"gene_novelty\"          \"transcript_novelty\"    \"ISM_subtype\"           \"209_1_VZ\"             \n[13] \"209_2_VZ\"              \"209_3_VZ\"              \"209_4_VZ\"              \"334_1_VZ\"             \n[17] \"334_2_VZ\"              \"334_3_VZ\"              \"334_4_VZ\"              \"336_1_VZ\"             \n[21] \"336_2_VZ\"              \"336_3_VZ\"              \"336_4_VZ\"              \"334_1_CP\"             \n[25] \"334_2_CP\"              \"334_3_CP\"              \"334_4_CP\"              \"209_1_CP\"             \n[29] \"209_2_CP\"              \"209_3_CP\"              \"209_4_CP\"              \"336_1_CP\"             \n[33] \"336_2_CP\"              \"336_3_CP\"              \"336_4_CP\"             \n\n\n\nlibrary(dplyr)\ncounts &lt;- raw_abundance_table |&gt;\n  select(gene_id = annot_gene_id,\n         feature_id = annot_transcript_id,\n         contains(c(\"VZ\",\"CP\")))\ncounts &lt;- counts |&gt;\n  rename_with(.cols = contains(c(\"VZ\",\"CP\")),\n              \\(x) paste0(\"s\", x))\nlibrary(tidyr)\nsamples &lt;- tibble(sample_id = colnames(counts)[-c(1:2)]) |&gt;\n  separate(sample_id, into=c(\"unit\",\"rep\",\"condition\"), sep=\"_\", remove=FALSE) |&gt;\n  mutate_at(c(\"rep\",\"condition\"), factor)"
  },
  {
    "objectID": "testing.html",
    "href": "testing.html",
    "title": "3  Statistical testing",
    "section": "",
    "text": "this is a test"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  }
]