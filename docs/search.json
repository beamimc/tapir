[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "TAPIR: Transcript analysis pipelines in R",
    "section": "",
    "text": "Book contents\nThis is where the good stuff goes.\nMaybe a description of the major sections…"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "2  Exploratory data analysis",
    "section": "",
    "text": "How can we explore transcript expression from long read data…\nLet’s load some data…\n\nlibrary(here)\n\nhere() starts at /Users/milove/bioc/tapir\n\nurl &lt;- \"https://github.com/gandallab/Dev_Brain_IsoSeq/raw/main/data/cp_vz_0.75_min_7_recovery_talon_abundance_filtered.tsv.gz\"\nfilename &lt;- basename(url)\npath &lt;- here(\"data\",filename)\nif (!file.exists(path)) {\n  download.file(url, path)\n}\n\n\nlibrary(readr)\n\n\nAttaching package: 'readr'\n\n\nThe following objects are masked from 'package:testthat':\n\n    edition_get, local_edition\n\nraw_abundance_table &lt;- read_delim(path)\n\nRows: 214516 Columns: 35\n\n\n── Column specification ────────────────────────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (7): annot_gene_id, annot_transcript_id, annot_gene_name, annot_transcript_name, gene_novel...\ndbl (28): gene_ID, transcript_ID, n_exons, length, 209_1_VZ, 209_2_VZ, 209_3_VZ, 209_4_VZ, 334_1...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndim(raw_abundance_table)\n\n[1] 214516     35\n\ncolnames(raw_abundance_table)\n\n [1] \"gene_ID\"               \"transcript_ID\"         \"annot_gene_id\"         \"annot_transcript_id\"  \n [5] \"annot_gene_name\"       \"annot_transcript_name\" \"n_exons\"               \"length\"               \n [9] \"gene_novelty\"          \"transcript_novelty\"    \"ISM_subtype\"           \"209_1_VZ\"             \n[13] \"209_2_VZ\"              \"209_3_VZ\"              \"209_4_VZ\"              \"334_1_VZ\"             \n[17] \"334_2_VZ\"              \"334_3_VZ\"              \"334_4_VZ\"              \"336_1_VZ\"             \n[21] \"336_2_VZ\"              \"336_3_VZ\"              \"336_4_VZ\"              \"334_1_CP\"             \n[25] \"334_2_CP\"              \"334_3_CP\"              \"334_4_CP\"              \"209_1_CP\"             \n[29] \"209_2_CP\"              \"209_3_CP\"              \"209_4_CP\"              \"336_1_CP\"             \n[33] \"336_2_CP\"              \"336_3_CP\"              \"336_4_CP\"             \n\nraw_abundance_table[1:5,1:15]\n\n# A tibble: 5 × 15\n  gene_ID transcript_ID annot_gene_id      annot_transcript_id annot_gene_name annot_transcript_name\n    &lt;dbl&gt;         &lt;dbl&gt; &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;           &lt;chr&gt;                \n1      12            21 ENSG00000268903.1… ENST00000494149.2_2 AL627309.6      AL627309.6-201       \n2      18            34 ENSG00000228463.4  ENST00000424587.2   AP006222.2      AP006222.2-001       \n3      22            39 ENSG00000224813.2  ENST00000445840.1   RP4-669L17.4    RP4-669L17.4-001     \n4      32            65 ENSG00000225630.1… ENST00000457540.1_1 MTND2P28        MTND2P28-201         \n5      33            66 ENSG00000237973.1… ENST00000414273.1_1 MTCO1P12        MTCO1P12-201         \n# ℹ 9 more variables: n_exons &lt;dbl&gt;, length &lt;dbl&gt;, gene_novelty &lt;chr&gt;, transcript_novelty &lt;chr&gt;,\n#   ISM_subtype &lt;chr&gt;, `209_1_VZ` &lt;dbl&gt;, `209_2_VZ` &lt;dbl&gt;, `209_3_VZ` &lt;dbl&gt;, `209_4_VZ` &lt;dbl&gt;\n\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following object is masked from 'package:testthat':\n\n    matches\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\n\n\nAttaching package: 'tidyr'\n\n\nThe following object is masked from 'package:testthat':\n\n    matches\n\nraw_abundance_table |&gt;\n  select(contains(c(\"VZ\",\"CP\"))) |&gt;\n  summarize(across(everything(), sum))\n\n# A tibble: 1 × 24\n  `209_1_VZ` `209_2_VZ` `209_3_VZ` `209_4_VZ` `334_1_VZ` `334_2_VZ` `334_3_VZ` `334_4_VZ` `336_1_VZ`\n       &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n1     623608     542318     501999     529527    1273843    1594927    1160553    1546123    1328077\n# ℹ 15 more variables: `336_2_VZ` &lt;dbl&gt;, `336_3_VZ` &lt;dbl&gt;, `336_4_VZ` &lt;dbl&gt;, `334_1_CP` &lt;dbl&gt;,\n#   `334_2_CP` &lt;dbl&gt;, `334_3_CP` &lt;dbl&gt;, `334_4_CP` &lt;dbl&gt;, `209_1_CP` &lt;dbl&gt;, `209_2_CP` &lt;dbl&gt;,\n#   `209_3_CP` &lt;dbl&gt;, `209_4_CP` &lt;dbl&gt;, `336_1_CP` &lt;dbl&gt;, `336_2_CP` &lt;dbl&gt;, `336_3_CP` &lt;dbl&gt;,\n#   `336_4_CP` &lt;dbl&gt;\n\n\n\nlibrary(here)\nfilename &lt;- \"cp_vz_0.75_min_7_recovery_talon_abundance_filtered.tsv.gz\"\npath &lt;- here(\"data\",filename)\nlibrary(readr)\nraw_abundance_table &lt;- read_delim(path)\n\nRows: 214516 Columns: 35\n── Column specification ────────────────────────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (7): annot_gene_id, annot_transcript_id, annot_gene_name, annot_transcript_name, gene_novel...\ndbl (28): gene_ID, transcript_ID, n_exons, length, 209_1_VZ, 209_2_VZ, 209_3_VZ, 209_4_VZ, 334_1...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndim(raw_abundance_table)\n\n[1] 214516     35\n\ncolnames(raw_abundance_table)\n\n [1] \"gene_ID\"               \"transcript_ID\"         \"annot_gene_id\"         \"annot_transcript_id\"  \n [5] \"annot_gene_name\"       \"annot_transcript_name\" \"n_exons\"               \"length\"               \n [9] \"gene_novelty\"          \"transcript_novelty\"    \"ISM_subtype\"           \"209_1_VZ\"             \n[13] \"209_2_VZ\"              \"209_3_VZ\"              \"209_4_VZ\"              \"334_1_VZ\"             \n[17] \"334_2_VZ\"              \"334_3_VZ\"              \"334_4_VZ\"              \"336_1_VZ\"             \n[21] \"336_2_VZ\"              \"336_3_VZ\"              \"336_4_VZ\"              \"334_1_CP\"             \n[25] \"334_2_CP\"              \"334_3_CP\"              \"334_4_CP\"              \"209_1_CP\"             \n[29] \"209_2_CP\"              \"209_3_CP\"              \"209_4_CP\"              \"336_1_CP\"             \n[33] \"336_2_CP\"              \"336_3_CP\"              \"336_4_CP\"             \n\n\n\nlibrary(dplyr)\ncounts &lt;- raw_abundance_table |&gt;\n  select(gene_id = annot_gene_id,\n         feature_id = annot_transcript_id,\n         contains(c(\"VZ\",\"CP\")))\ncounts &lt;- counts |&gt;\n  rename_with(.cols = contains(c(\"VZ\",\"CP\")),\n              \\(x) paste0(\"s\", x))\nlibrary(tidyr)\nsamples &lt;- tibble(sample_id = colnames(counts)[-c(1:2)]) |&gt;\n  separate(sample_id, into=c(\"unit\",\"rep\",\"condition\"), sep=\"_\", remove=FALSE) |&gt;\n  mutate_at(c(\"rep\",\"condition\"), factor)"
  },
  {
    "objectID": "testing.html",
    "href": "testing.html",
    "title": "3  Statistical testing",
    "section": "",
    "text": "Downloading Glinos et al. dataset (GTEx, PTBP1 knockdown)\n\nlibrary(here)\n# https://drive.google.com/file/d/1ATHgwFlIMmI651C5TYtiBxm2atTvbBYn/view?usp=sharing\n# counts\nurl &lt;- \"https://drive.google.com/uc?export=download&id=1ATHgwFlIMmI651C5TYtiBxm2atTvbBYn\"\nfilename &lt;- \"quantification_flair_filter.counts.txt.gz\"\npath &lt;- here(\"data\", filename)\nif (!file.exists(path)) {\n  download.file(url, path)\n}\n# GTF\nurl &lt;- \"https://drive.google.com/uc?export=download&id=1S0TRXoXsfnXwJ0Dh5bLqVmyvFAAALFMU\"\nfilename &lt;- \"flair_filter_transcripts.gtf.gz\"\npath &lt;- here(\"data\", filename)\nif (!file.exists(path)) {\n  download.file(url, path)\n}\n# metadata\nurl &lt;- \"https://drive.google.com/uc?export=download&id=1LpYPXXhMtUV3vMG7SMLV69-JxZfc59o2\"\nfilename &lt;- \"glinos_metadata.csv\"\npath &lt;- here(\"data\", filename)\nif (!file.exists(path)) {\n  download.file(url, path)\n}\n\nAssembling the object:\n\nlibrary(readr)\nlibrary(dplyr)\nlibrary(stringr)\ncounts &lt;- read_delim(here(\"data\", \"quantification_flair_filter.counts.txt.gz\"))\nmeta &lt;- read_delim(here(\"data\", \"glinos_metadata.csv\"))\ncolnames(meta)[10] &lt;- \"total_reads\"\nmeta &lt;- meta |&gt;\n  mutate(condition = str_extract(sample_id, \"(ctrl|exp)\")) |&gt;\n  select(sample_id, sample_name, condition, contains(\"read\") | contains(\"3_prime\")) |&gt;\n  arrange(condition, sample_name)\n\nrnames &lt;- counts$transcript\ncounts &lt;- as.matrix(counts[,meta$sample_id]) # subset to the knockdown\nrownames(counts) &lt;- rnames\n\n\nlibrary(SummarizedExperiment)\nse &lt;- SummarizedExperiment(list(counts = counts),\n                           colData = meta)\nsaveRDS(se, file=here(\"data\", \"glinos_se.rds\"))\n\n\nlibrary(here)\nlibrary(SummarizedExperiment)\nse &lt;- readRDS(here(\"data\", \"glinos_se.rds\"))\nkeep &lt;- rowSums(assay(se) &gt;= 10) &gt;= 6\ntable(keep)\n\nkeep\nFALSE  TRUE \n77437 16193 \n\nse &lt;- se[keep,]\n\n\nlibrary(DESeq2)\nlibrary(tximeta)\nlibrary(stringr)\nstopifnot(packageVersion(\"tximeta\") &gt;= \"1.25.1\")\ncolsums &lt;- colSums(assay(se, \"counts\"))\ncpm &lt;- t(t(assay(se, \"counts\")) / colsums * 1e6)\nassay(se, \"abundance\") &lt;- cpm\nassay(se, \"length\", withDimnames=FALSE) &lt;- matrix(1000, nrow=nrow(se), ncol=ncol(se))\nse$condition &lt;- factor(se$condition, c(\"ctrl\",\"exp\"))\nse_sub &lt;- se[grepl(\"ENSG\",rownames(se)),]\ntx2gene &lt;- DataFrame(txid = rownames(se_sub),\n                     geneid = str_extract(rownames(se_sub), \".*_(ENSG.*)$\", group=1))\ngse &lt;- summarizeToGene(se_sub, tx2gene = tx2gene, skipRanges=TRUE)\n#saveRDS(gse, file=here(\"data\",\"glinos_gene_counts.rds\"))\n\n\ndds &lt;- DESeqDataSet(gse, ~condition)\n\nconverting counts to integer mode\n\nkeep &lt;- rowSums(counts(dds) &gt;= 10) &gt;= 6\ntable(keep)\n\nkeep\nTRUE \n8914 \n\ndds &lt;- DESeq(dds, minRep=Inf)\n\nestimating size factors\n\n\nestimating dispersions\n\n\ngene-wise dispersion estimates\n\n\nmean-dispersion relationship\n\n\nfinal dispersion estimates\n\n\nfitting model and testing\n\nres &lt;- results(dds)\nsummary(res)\n\n\nout of 8914 with nonzero total read count\nadjusted p-value &lt; 0.1\nLFC &gt; 0 (up)       : 1495, 17%\nLFC &lt; 0 (down)     : 1522, 17%\noutliers [1]       : 1, 0.011%\nlow counts [2]     : 0, 0%\n(mean count &lt; 7)\n[1] see 'cooksCutoff' argument of ?results\n[2] see 'independentFiltering' argument of ?results\n\n\n\nlibrary(org.Hs.eg.db)\n\nLoading required package: AnnotationDbi\n\n\n\n\ngene_anno &lt;- DataFrame(geneid = str_extract(rownames(dds), \"(ENSG.*)\\\\..*\", group=1),\n                       baseMean = round(rowData(dds)$baseMean))\ngene_anno$symbol &lt;- org.Hs.eg.db |&gt; mapIds(gene_anno$geneid, \"SYMBOL\", \"ENSEMBL\")\n\n'select()' returned 1:many mapping between keys and columns\n\ngene_anno$symbol[is.na(gene_anno$symbol)] &lt;- gene_anno$geneid[is.na(gene_anno$symbol)]\nrowData(dds)$symbol &lt;- gene_anno$symbol\nidx &lt;- which(rowData(dds)$symbol == \"PTBP1\")\nplotCounts(dds, gene=idx)\n\n\n\n\n\nvsd &lt;- vst(dds, blind=FALSE)\nplotPCA(vsd)\n\nusing ntop=500 top features by variance\n\n\n\n\n\n\n#saveRDS(dds, file=here(\"data\", \"deseq2_gene.rds\"))\n#saveRDS(vsd, file=here(\"data\", \"vst_gene.rds\"))\n\n\nlibrary(Glimma)\ng &lt;- glimmaMA(\n  dds, \n  groups=dds$condition, \n  anno=gene_anno[,-1],\n  main=\"Glinos et al. (2022) - PTBP1 knockdown\", # title above left summary plot\n  transform.counts=\"cpm\", \n  test=\"Wald\", name=\"condition_exp_vs_ctrl\",\n  independentFiltering=FALSE, \n  cooksCutoff=FALSE\n)\nhtmlwidgets::saveWidget(g, here(\"data\",\"glinos_ma-plot.html\"))\n\n\n# DTU filter\nse &lt;- se_sub # removed txps not associated with genes\nrowData(se)$gene_id &lt;- tx2gene[,\"geneid\"]\n\n\nlibrary(plyxp)\n\n\nAttaching package: 'plyxp'\n\n\nThe following object is masked from 'package:AnnotationDbi':\n\n    select\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nxp &lt;- se |&gt;\n  new_plyxp()\nxp &lt;- xp |&gt;\n  mutate(rows(gene = str_extract(gene_id, \"(ENSG.*)\\\\..*\", group=1),\n              symbol = mapIds(org.Hs.eg.db, gene, \"SYMBOL\", \"ENSEMBL\"),\n              symbol = dplyr::case_when(\n                is.na(symbol) ~ gene,\n                TRUE ~ symbol\n              )))\n\n'select()' returned 1:many mapping between keys and columns\n\ntab &lt;- table(rowData(se)$gene_id)\none_isoform_gene &lt;- names(tab)[ tab == 1]\nxp &lt;- xp |&gt;\n  filter(rows(!gene_id %in% one_isoform_gene)) |&gt;\n  arrange(rows(gene_id))\n\n\nhead(table(table(rowData(xp)$gene_id))) # confirm no single isoform genes\n\n\n   2    3    4    5    6    7 \n1968  779  306  111   73   39 \n\n\n\nse &lt;- se(xp)\n# needed for satuRn\nrowData(se)$isoform_id &lt;- rownames(se)\n\n\n# 5 seconds\nlibrary(satuRn)\nse &lt;- satuRn::fitDTU(se, formula=~0 + condition)\n\n\ndesign &lt;- model.matrix(~0 + condition, colData(se))\ncolnames(design)\n\n[1] \"conditionctrl\" \"conditionexp\" \n\ncolnames(design) &lt;- levels(se$condition)\nL &lt;- limma::makeContrasts(\n  exp_vs_ctrl = exp - ctrl,\n  levels = design\n)\nL # contrast matrix\n\n      Contrasts\nLevels exp_vs_ctrl\n  ctrl          -1\n  exp            1\n\n\n\nse &lt;- satuRn::testDTU(\n  object = se,\n  contrasts = L,\n  diagplot1 = TRUE,\n  diagplot2 = TRUE\n)\n\n\n\n\n\n\n#saveRDS(se, file=here(\"data\",\"glinos-saturn_dtu.rds\"))\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following object is masked from 'package:AnnotationDbi':\n\n    select\n\n\nThe following object is masked from 'package:Biobase':\n\n    combine\n\n\nThe following objects are masked from 'package:GenomicRanges':\n\n    intersect, setdiff, union\n\n\nThe following object is masked from 'package:GenomeInfoDb':\n\n    intersect\n\n\nThe following objects are masked from 'package:IRanges':\n\n    collapse, desc, intersect, setdiff, slice, union\n\n\nThe following objects are masked from 'package:S4Vectors':\n\n    first, intersect, rename, setdiff, setequal, union\n\n\nThe following objects are masked from 'package:BiocGenerics':\n\n    combine, intersect, setdiff, union\n\n\nThe following object is masked from 'package:matrixStats':\n\n    count\n\n\nThe following object is masked from 'package:testthat':\n\n    matches\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nsig_res &lt;- rowData(se)[[paste0(\"fitDTUResult_exp_vs_ctrl\")]] |&gt;\n  as_tibble() |&gt;\n  bind_cols(as.data.frame(rowData(se)[,1:3])) |&gt;\n  filter(empirical_FDR &lt; .1) |&gt;\n  select(gene_id, symbol, estimates, empirical_pval, empirical_FDR) |&gt;\n  arrange(empirical_pval)\n#write.csv(sig_res, file=here(\"data\",\"glinos-saturn_dtu.csv\"), quote=FALSE, row.names=FALSE)\nsig_res\n\n# A tibble: 61 × 5\n   gene_id            symbol estimates empirical_pval empirical_FDR\n   &lt;chr&gt;              &lt;chr&gt;      &lt;dbl&gt;          &lt;dbl&gt;         &lt;dbl&gt;\n 1 ENSG00000196923.13 PDLIM7     -5.14    0.000000313       0.00308\n 2 ENSG00000198467.13 TPM2       -2.93    0.00000327        0.0109 \n 3 ENSG00000138674.16 SEC31A     -2.41    0.00000333        0.0109 \n 4 ENSG00000196923.13 PDLIM7      4.92    0.00000861        0.0212 \n 5 ENSG00000198467.13 TPM2        3.27    0.0000171         0.0254 \n 6 ENSG00000161203.13 AP2M1       1.51    0.0000173         0.0254 \n 7 ENSG00000134285.10 FKBP11      1.98    0.0000181         0.0254 \n 8 ENSG00000134285.10 FKBP11     -1.98    0.0000213         0.0262 \n 9 ENSG00000167460.14 TPM4       -1.33    0.0000274         0.0300 \n10 ENSG00000161203.13 AP2M1      -1.83    0.0000368         0.0318 \n# ℹ 51 more rows\n\n\n\ncpm &lt;- assay(se, \"abundance\")[rowData(se)$symbol == \"PDLIM7\",]\nrownames(cpm) &lt;- seq_len(nrow(cpm))\ncolnames(cpm) &lt;- se$condition\nround(cpm)\n\n  ctrl ctrl ctrl ctrl ctrl ctrl exp exp exp exp exp exp exp\n1    1    2    2    2    1    1 295 190 150 146 175 183 236\n2    7    5    8   10    9    7   8   5   6   4   4   5   5\n3    1    1    1    2    1    0  72  45  37  36  38  35  55\n4    0    0    1    0    2    0   6   7   6   6   5   8   5\n5  124  105  114   94  104   84  15   9  14  11   9  10  10\n6    4    2    4    2    4    1  19   9  15  13  11  12   7\n\n\n\nsessionInfo()\n\nR version 4.4.2 (2024-10-31)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Sonoma 14.4.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] dplyr_1.1.4                 satuRn_1.14.0               plyxp_1.1.1                \n [4] org.Hs.eg.db_3.20.0         AnnotationDbi_1.68.0        stringr_1.5.1              \n [7] tximeta_1.25.2              DESeq2_1.46.0               SummarizedExperiment_1.36.0\n[10] Biobase_2.66.0              GenomicRanges_1.58.0        GenomeInfoDb_1.42.3        \n[13] IRanges_2.40.1              S4Vectors_0.44.0            BiocGenerics_0.52.0        \n[16] MatrixGenerics_1.18.1       matrixStats_1.5.0           here_1.0.1                 \n[19] testthat_3.2.3              rmarkdown_2.29              devtools_2.4.5             \n[22] usethis_3.1.0              \n\nloaded via a namespace (and not attached):\n  [1] jsonlite_1.9.0           tximport_1.34.0          magrittr_2.0.3          \n  [4] GenomicFeatures_1.58.0   farver_2.1.2             fs_1.6.5                \n  [7] BiocIO_1.16.0            zlibbioc_1.52.0          vctrs_0.6.5             \n [10] locfdr_1.1-8             memoise_2.0.1            Rsamtools_2.22.0        \n [13] RCurl_1.98-1.16          htmltools_0.5.8.1        S4Arrays_1.6.0          \n [16] progress_1.2.3           AnnotationHub_3.14.0     curl_6.2.1              \n [19] SparseArray_1.6.1        htmlwidgets_1.6.4        httr2_1.1.0             \n [22] cachem_1.1.0             GenomicAlignments_1.42.0 mime_0.12               \n [25] lifecycle_1.0.4          pkgconfig_2.0.3          Matrix_1.7-2            \n [28] R6_2.6.1                 fastmap_1.2.0            GenomeInfoDbData_1.2.13 \n [31] shiny_1.10.0             digest_0.6.37            colorspace_2.1-1        \n [34] rprojroot_2.0.4          pkgload_1.4.0            RSQLite_2.3.9           \n [37] labeling_0.4.3           filelock_1.0.3           httr_1.4.7              \n [40] abind_1.4-8              compiler_4.4.2           remotes_2.5.0           \n [43] withr_3.0.2              bit64_4.6.0-1            S7_0.2.0                \n [46] BiocParallel_1.40.0      DBI_1.2.3                pkgbuild_1.4.6          \n [49] biomaRt_2.62.1           rappdirs_0.3.3           DelayedArray_0.32.0     \n [52] sessioninfo_1.2.3        rjson_0.2.23             tools_4.4.2             \n [55] httpuv_1.6.15            glue_1.8.0               restfulr_0.0.15         \n [58] promises_1.3.2           grid_4.4.2               generics_0.1.3          \n [61] gtable_0.3.6             tidyr_1.3.1              ensembldb_2.30.0        \n [64] hms_1.1.3                utf8_1.2.4               xml2_1.3.6              \n [67] XVector_0.46.0           BiocVersion_3.20.0       pillar_1.10.1           \n [70] limma_3.62.2             later_1.4.1              splines_4.4.2           \n [73] BiocFileCache_2.14.0     lattice_0.22-6           rtracklayer_1.66.0      \n [76] bit_4.5.0.1              tidyselect_1.2.1         locfit_1.5-9.11         \n [79] pbapply_1.7-2            Biostrings_2.74.1        miniUI_0.1.1.1          \n [82] knitr_1.49               ProtGenerics_1.38.0      xfun_0.51               \n [85] statmod_1.5.0            brio_1.1.5               stringi_1.8.4           \n [88] UCSC.utils_1.2.0         boot_1.3-31              lazyeval_0.2.2          \n [91] yaml_2.3.10              evaluate_1.0.3           codetools_0.2-20        \n [94] tibble_3.2.1             BiocManager_1.30.25      cli_3.6.4               \n [97] xtable_1.8-4             munsell_0.5.1            Rcpp_1.0.14             \n[100] dbplyr_2.5.0             png_0.1-8                XML_3.99-0.18           \n[103] parallel_4.4.2           ellipsis_0.3.2           ggplot2_3.5.1           \n[106] blob_1.2.4               prettyunits_1.2.0        profvis_0.4.0           \n[109] AnnotationFilter_1.30.0  urlchecker_1.0.1         bitops_1.0-9            \n[112] txdbmaker_1.2.1          scales_1.3.0             purrr_1.0.4             \n[115] crayon_1.5.3             rlang_1.1.5              KEGGREST_1.46.0"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  }
]