# Statistical testing

Let's load some data...

```{r}
library(here)
filename <- "cp_vz_0.75_min_7_recovery_talon_abundance_filtered.tsv.gz"
path <- here("data",filename)
library(readr)
raw_abundance_table <- read_delim(path)
dim(raw_abundance_table)
colnames(raw_abundance_table)
```

```{r}
library(dplyr)
counts <- raw_abundance_table |>
  select(gene_id = annot_gene_id,
         feature_id = annot_transcript_id,
         contains(c("VZ","CP")))
counts <- counts |>
  rename_with(.cols = contains(c("VZ","CP")),
              \(x) paste0("s", x))
library(tidyr)
samples <- tibble(sample_id = colnames(counts)[-c(1:2)]) |>
  separate(sample_id, into=c("unit","rep","condition"), sep="_", remove=FALSE) |>
  mutate_at(c("rep","condition"), factor)
```

```{r}
library(DRIMSeq)
d <- dmDSdata(counts=as.data.frame(counts),
              samples=as.data.frame(samples))
d
n <- 24
n_small <- 12
d <- dmFilter(d,
              min_samps_feature_expr=n_small, min_feature_expr=10,
              min_samps_feature_prop=n_small, min_feature_prop=0.1,
              min_samps_gene_expr=n, min_gene_expr=10)
d
table(table(counts(d)$gene_id))
```

```{r}
library(DEXSeq)
counts_for_dex <- round(as.matrix(counts(d)[,-c(1:2)]))
dxd <- DEXSeqDataSet(
  countData=counts_for_dex,
  sampleData=samples,
  design=~sample + exon + condition:exon,
  featureID=counts(d)$feature_id,
  groupID=counts(d)$gene_id
)
# 70 seconds
if (FALSE) {
  system.time({
    dxd <- estimateSizeFactors(dxd)
    dxd <- estimateDispersions(dxd, quiet=TRUE)
    dxd <- testForDEU(dxd, reducedModel=~sample + exon)
  })
  save(dxd, file="dxd.rda")
} else {
  load("dxd.rda")
}
res <- DEXSeqResults(dxd)
```

```{r dexseq_heatmap}
ids <- res[which.min(res$pvalue),1:2,drop=TRUE]
counts(d[ids$groupID,])
ids$featureID
library(pheatmap)
dat <- counts(d[ids$groupID,])[,-c(1:2)]
rownames(dat) <- counts(d[ids$groupID,])$feature_id
anno_col <- as.data.frame(samples[,"condition"])
rownames(anno_col) <- samples$sample_id
pheatmap(
  dat,
  cluster_cols=FALSE,
  show_colnames=FALSE,
  annotation_col=anno_col
)
```
